# -*- coding: utf-8 -*-
"""
Created on Sat Jun 22 10:47:14 2019

@author: USER
"""
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeRegressor 
from sklearn.metrics import mean_absolute_error
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import classification_report, confusion_matrix  
from sklearn.neighbors import KNeighborsClassifier
import pandas as pd
    
def KNN(dataset,features):
     X = dataset[features]
     y = dataset.Class
     train_X, val_X, train_y, val_y = train_test_split(X, y, random_state=1,test_size=0.30)
     
     scaler = StandardScaler()  
     scaler.fit(train_X)
    
     train_X = scaler.transform(train_X)  
     val_X = scaler.transform(val_X) 
    
     classifier = KNeighborsClassifier(n_neighbors=5)  
     classifier.fit(train_X, train_y)  
     val_predictions = classifier.predict(val_X)
     print(val_predictions);
     val_mae = mean_absolute_error(val_predictions, val_y)
     print(val_mae)
     
     print(classification_report(val_y, val_predictions))  
     
     dataset_test = 'D:/USER/malware/CSV/test.csv'
     dataset_test = pd.read_csv(dataset_test,index_col='Id') 
     test_X= dataset_test[features]
    
    
     preds = classifier.predict(test_X)
     print("\r\n")
     print("predizione")
     print (preds)
     
     output = pd.DataFrame({'Class': preds,'Id':dataset_test.index})
     output.to_csv('KNNClassificator.csv', index=False)