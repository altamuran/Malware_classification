# -*- coding: utf-8 -*-
"""
Created on Sun Jun 16 10:49:34 2019

@author: USER
"""



def header_asm_opcodes():
    opcodes = ['add','al','bt','call','cdq','cld','cli','cmc','cmp','const','cwd','daa','db'
                ,'dd','dec','dw','endp','ends','faddp','fchs','fdiv','fdivp','fdivr','fild'
                ,'fistp','fld','fstcw','fstcwimul','fstp','fword','fxch','imul','in','inc'
                ,'ins','int','jb','je','jg','jge','jl','jmp','jnb','jno','jnz','jo','jz'
                ,'lea','loope','mov','movzx','mul','near','neg','not','or','out','outs'
                ,'pop','popf','proc','push','pushf','rcl','rcr','rdtsc','rep','ret','retn'
                ,'rol','ror','sal','sar','sbb','scas','setb','setle','setnle','setnz'
                ,'setz','shl','shld','shr','sidt','stc','std','sti','stos','sub','test'
                ,'wait','xchg','xor']

    colnames = ['asm_opcodes_'+op for op in opcodes]
    return colnames
def header_asm_registers():
    registers = ['edx','esi','es','fs','ds','ss','gs','cs','ah','al',
                 'ax','bh','bl','bx','ch','cl','cx','dh','dl','dx',
                 'eax','ebp','ebx','ecx','edi','esp']

    colnames = ['asm_regs_'+reg for reg in registers]
    return colnames

def header_asm_apis(apis):
    colnames = [api for api in apis]
    #colnames = defined_apis[0].split(',')
    return colnames

def header_asm_sym():
    symbols = ['Star','Dash','Plus','Bracket_Open','Bracket_Close','AtSign','Question']
    colnames = ['asm_symb_'+reg for reg in symbols]
    return colnames

def header_asm_sections():
    kown_sections = ['.text','.data','.bss', '.rdata','.edata','.idata', '.rsrc','.tls','.reloc']
    colnames = kown_sections + ['Num_Sections', 'Unknown_Sections', 'Unknown_Sections_lines']
    colnames += ['.text_por','.data_por','.bss_por', '.rdata_por','.edata_por',
                 '.idata_por', '.rsrc_por','.tls_por','.reloc_por']
    colnames += ['known_Sections_por', 'Unknown_Sections_por', 'Unknown_Sections_lines_por']
    return colnames

def header_byte_meta_data():
    colnames = ['byte_filesize','byte_offset']
    return colnames


