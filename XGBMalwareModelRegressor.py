# -*- coding: utf-8 -*-
"""
Created on Thu Jun 20 20:23:32 2019

@author: USER
"""
from sklearn.metrics import mean_absolute_error
from sklearn.model_selection import train_test_split
import pandas as pd
from xgboost import XGBRegressor

def XGBMalwareModelRegressor(dataset,features):
    X = dataset[features]
    y = dataset.Class
    train_X, val_X, train_y, val_y = train_test_split(X, y, random_state=1)
     
    XGBMalwareModel =   XGBRegressor(n_estimators=1000,max_leaf_nodes=25, learning_rate=0.7)
    XGBMalwareModel.fit(train_X, train_y, 
                 early_stopping_rounds=5, 
                 eval_set=[(val_X, val_y)], 
                 verbose=False)
    val_predictions = XGBMalwareModel.predict(val_X)
    print("XGBMalwareModel"+"\r\n")
    print('preds:', val_predictions ,"\r\n")
    
    val_mae = mean_absolute_error(val_predictions, val_y)
    print('MAE:', val_mae)
    
    dataset_test = 'D:/USER/malware/CSV/test.csv'
    dataset_test = pd.read_csv(dataset_test,index_col='Id') 
    test_X= dataset_test[features]
    
    
    preds = XGBMalwareModel.predict(test_X)
    print("\r\n")
    print("predizione")
    print (preds)
    
    output = pd.DataFrame({'Class': preds,'Id':dataset_test.index})
    output.to_csv('XGBMalwareModel_prediction.csv', index=False)